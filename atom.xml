<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>没有什么永垂不朽</title>
  
  <subtitle>没有比脚更长的路，走过去，前面是个天！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.bestliuhao.club/"/>
  <updated>2019-02-28T06:58:23.616Z</updated>
  <id>http://www.bestliuhao.club/</id>
  
  <author>
    <name>刘浩</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java-类加载机制</title>
    <link href="http://www.bestliuhao.club/Java%E6%80%BB%E7%BB%93/Java-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/"/>
    <id>http://www.bestliuhao.club/Java总结/Java-类加载机制/</id>
    <published>2019-02-28T06:43:57.000Z</published>
    <updated>2019-02-28T06:58:23.616Z</updated>
    
    <content type="html"><![CDATA[<p>   JVM将类加载过程分为三个步骤：装载（Load），链接（Link）和初始化(Initialize)。<br>链接又分为三个步骤，如下图所示:<br> <img src="/Java总结/Java-类加载机制/类加载机制1.png" alt="类加载机制1" title="类加载机制1"></p><ol><li>装载：通过类加载器，查找并加载类的二进制数据</li><li>链接：<ol><li>验证：确保被加载类的正确性；检查class文件是否符合JVM字节码格式的，正常情况由编译器生成的class文件肯定符合，如果不是，那需要验证通过才能下一步，安全考虑</li><li>准备：为类的静态变量分配内存，并将其初始化为默认值；如private static int a = 10<br>在准备阶段即a=0，然后解析，再到初始化的时候才a=10</li><li>解析：把类中的符号引用转换为直接引用</li></ol></li><li>初始化：为类的静态变量赋予正确的初始值，及创建对象<blockquote><p>类的加载指的是将类的.class文件中的二进制数据读入到内存中，将其放在运行时数据区的方法区内，然后在堆区创建一个这个类的java.lang.Class对象，用来封装类在方法区类的对象</p></blockquote></li><li>使用对象</li><li>卸载</li></ol><p><em>类加载器</em></p><ol><li>启动类加载器(Bootstrap ClassLoader)：负责加载 JAVA_HOME\lib 目录中的，或通过-Xbootclasspath参数指定路径中的，且被虚拟机认可（按文件名识别，如rt.jar）的类</li><li>扩展类加载器(Extension ClassLoader)：负责加载 JAVA_HOME\lib\ext 目录中的，或通过java.ext.dirs系统变量指定路径中的类库</li><li>应用程序类加载器(Application ClassLoader)：负责加载用户路径（classpath）上的类库</li><li>自定义类加载器<blockquote><p>JDK中的ClassLoader<br><img src="/Java总结/Java-类加载机制/类加载机制2.png" alt="类加载机制2" title="类加载机制2"><br>通过上面可以看出findClass()的实现，直接抛出一个异常，并且方法是protected，很明显这是留给我们开发者自己去实现的，我们可以通过重写findClass方法来实现我们自己的类加载器。<br>Springboot通过@EnableAutoConfiguration注解，会根据META-INF/spring.<br>factories文件自动配置，通过@Configuration代理原来的xml配置类，通过@ComponentScan配置类扫描路径，反射生成ioc容器</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;   JVM将类加载过程分为三个步骤：装载（Load），链接（Link）和初始化(Initialize)。&lt;br&gt;链接又分为三个步骤，如下图所示:&lt;br&gt; &lt;img src=&quot;/Java总结/Java-类加载机制/类加载机制1.png&quot; alt=&quot;类加载机制1&quot; title
      
    
    </summary>
    
      <category term="Java总结" scheme="http://www.bestliuhao.club/categories/Java%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="Java总结" scheme="http://www.bestliuhao.club/tags/Java%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Java-数据类型</title>
    <link href="http://www.bestliuhao.club/Java%E6%80%BB%E7%BB%93/Java-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://www.bestliuhao.club/Java总结/Java-数据类型/</id>
    <published>2019-02-28T06:25:26.000Z</published>
    <updated>2019-02-28T06:41:25.105Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">位数</th><th style="text-align:center">字节数</th><th style="text-align:center">取值范围</th></tr></thead><tbody><tr><td style="text-align:center">byte</td><td style="text-align:center">8</td><td style="text-align:center">1</td><td style="text-align:center">-2^7 ~ 2^7-1</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">16</td><td style="text-align:center">2</td><td style="text-align:center">-2^15 ~ 2^15-1</td></tr><tr><td style="text-align:center">int</td><td style="text-align:center">32</td><td style="text-align:center">4</td><td style="text-align:center">-2^31 ~ 2^31-1</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">64</td><td style="text-align:center">8</td><td style="text-align:center">-2^63 ~ 2^63-1</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">32</td><td style="text-align:center">4</td><td style="text-align:center">2^-149 ~ 2^128-1</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">64</td><td style="text-align:center">8</td><td style="text-align:center">2^-1074 ~ 2^1024-1</td></tr><tr><td style="text-align:center">char</td><td style="text-align:center">16</td><td style="text-align:center">2</td><td style="text-align:center">0  ~  2^16-1</td></tr></tbody></table><blockquote><p>boolean:        没有固定大小根据虚拟机定义</p></blockquote><p><em>Bit(位)、byte、字节、汉字的关系</em></p><pre><code>1 bit  = 1  二进制数据1 byte = 8  bit1 字母 = 1  byte = 8 bit1 汉字 = 2  byte = 16 bit</code></pre><ol><li>bit：位<br> 一个二进制数据0或1，是1bit；  </li><li>byte：字节<br>存储空间的基本计量单位，如：MySQL中定义 VARCHAR(45)  即是指 45个字节；<br>1 byte = 8 bit  </li><li>一个英文字符占一个字节；<br> 1 字母 = 1 byte = 8 bit  </li><li>一个汉字占2个字节；<br> 1 汉字 = 2 byte = 16 bit  </li><li>标点符号  <ol><li>汉字输入状态下，默认为全角输入方式；  </li><li>英文输入状态下，默认为半角输入方式；  </li><li>全角输入方式下，标点符号占2字节；  </li><li>半角输入方式下，标点符号占1字节；<br>故：汉字输入状态下的字符，占2个字节 (但不排除，自己更改了默认设置)；  <pre><code>英文输入状态下的字符，占1个字节 (但不排除，自己更改了默认设置)；</code></pre></li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;类型&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;位数&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;字节数&lt;/th&gt;
&lt;th 
      
    
    </summary>
    
      <category term="Java总结" scheme="http://www.bestliuhao.club/categories/Java%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="Java总结" scheme="http://www.bestliuhao.club/tags/Java%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Java Bean Validation完成后端数据校验</title>
    <link href="http://www.bestliuhao.club/Java/Java-Bean-Validation%E5%AE%8C%E6%88%90%E5%90%8E%E7%AB%AF%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C/"/>
    <id>http://www.bestliuhao.club/Java/Java-Bean-Validation完成后端数据校验/</id>
    <published>2019-01-24T08:04:09.000Z</published>
    <updated>2019-01-25T06:43:58.681Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　数据的校验是交互式网站一个不可或缺的功能，前端的js校验可以涵盖大部分的校验职责，如用户名唯一性，生日格式，邮箱格式校验等等常用的<br>校验。但是为了避免用户绕过浏览器，使用http工具直接向后端请求一些违法数据，服务端的数据校验也是必要的，可以防止脏数据落到数据库中，如<br>果数据库中出现一个非法的邮箱格式，也会让运维人员头疼不已。我在之前保险产品研发过程中，系统对数据校验要求比较严格且追求可变性及效率，<br>曾使用drools作为规则引擎，兼任了校验的功能。而在一般的应用，可以使用本文将要介绍的validation来对数据进行校验。</p><h2 id="JSR303-JSR-349"><a href="#JSR303-JSR-349" class="headerlink" title="JSR303/JSR-349"></a>JSR303/JSR-349</h2><p>　　简述JSR303/JSR-349，Hibernate Validation，Spring Validation之间的关系。JSR303是一项标准,JSR-349是其的升级版本，添加了一些<br>新特性，他们规定一些校验规范即校验注解，如@Null，@NotNull，@Pattern，他们位于javax.validation.constraints包下，只提供规范不提供<br>实现。而hibernate validation是对这个规范的实践（不要将hibernate和数据库orm框架联系在一起），他提供了相应的实现，并增加了一些其他校<br>验注解，如@Email，@Length，@Range等等，他们位于org.hibernate.validator.constraints包下。而万能的Spring为了给开发者提供便捷，对<br>Hibernate Validation进行了二次封装，显示校验validated bean时，你可以使用Spring Validation或者Hibernate Validation，而Spring<br>validation另一个特性，便是其在SpringMVC模块中添加了自动校验，并将校验信息封装进了特定的类中。这无疑便捷了我们的web开发。本文主要介<br>绍在SpringMVC中自动校验的机制。注解如下：</p><h3 id="JSR提供的校验注解："><a href="#JSR提供的校验注解：" class="headerlink" title="JSR提供的校验注解："></a>JSR提供的校验注解：</h3><table><thead><tr><th>注解</th><th>注释</th></tr></thead><tbody><tr><td>@Null</td><td>被注释的元素必须为 null</td></tr><tr><td>@NotNull</td><td>被注释的元素必须不为 null</td></tr><tr><td>@AssertTrue</td><td>被注释的元素必须为 true</td></tr><tr><td>@AssertFalse</td><td>被注释的元素必须为 false</td></tr><tr><td>@Min(value)</td><td>被注释的元素必须是一个数字，其值必须大于等于指定的最小值</td></tr><tr><td>@Max(value)</td><td>被注释的元素必须是一个数字，其值必须小于等于指定的最大值</td></tr><tr><td>@DecimalMin(value)</td><td>被注释的元素必须是一个数字，其值必须大于等于指定的最小值</td></tr><tr><td>@DecimalMax(value)</td><td>被注释的元素必须是一个数字，其值必须小于等于指定的最大值</td></tr><tr><td>@Size(max=, min=)</td><td>被注释的元素的大小必须在指定的范围内</td></tr><tr><td>@Digits (integer, fraction)</td><td>被注释的元素必须是一个数字，其值必须在可接受的范围内</td></tr><tr><td>@Past</td><td>被注释的元素必须是一个过去的日期</td></tr><tr><td>@Future</td><td>被注释的元素必须是一个将来的日期</td></tr><tr><td>@Pattern(regex=,flag=)</td><td>被注释的元素必须符合指定的正则表达式</td></tr></tbody></table><h3 id="Hibernate-Validator提供的校验注解："><a href="#Hibernate-Validator提供的校验注解：" class="headerlink" title="Hibernate Validator提供的校验注解："></a>Hibernate Validator提供的校验注解：</h3><table><thead><tr><th>注解</th><th>注释</th></tr></thead><tbody><tr><td>@NotBlank(message =)</td><td>验证字符串非null，且长度必须大于0</td></tr><tr><td>@Email</td><td>被注释的元素必须是电子邮箱地址</td></tr><tr><td>@Length(min=,max=)</td><td>被注释的字符串的大小必须在指定的范围内</td></tr><tr><td>@NotEmpty</td><td>被注释的字符串的必须非空</td></tr><tr><td>@Range(min=,max=,message=)</td><td>被注释的元素必须在合适的范围内</td></tr></tbody></table><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="添加JAR包依赖"><a href="#添加JAR包依赖" class="headerlink" title="添加JAR包依赖"></a>添加JAR包依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.7.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;classifier&gt;sources&lt;/classifier&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="简单校验"><a href="#简单校验" class="headerlink" title="简单校验"></a>简单校验</h2><h3 id="1-在pojo中指定校验规则"><a href="#1-在pojo中指定校验规则" class="headerlink" title="1.在pojo中指定校验规则"></a>1.在pojo中指定校验规则</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.Length;</span><br><span class="line"><span class="keyword">import</span> org.springframework.format.annotation.DateTimeFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiModel</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"姓名"</span>)</span><br><span class="line">    <span class="meta">@NotEmpty</span>(message = <span class="string">"姓名不能为空！"</span>)</span><br><span class="line">    <span class="meta">@Max</span>(value = <span class="number">5</span>, message = <span class="string">"姓名长度不能超过5！"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">10</span>, message = <span class="string">"昵称长度不能超过10！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"昵称"</span>)</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="meta">@Pattern</span>(regexp = <span class="string">"[男|女]"</span>, message = <span class="string">"性别只能在男或女中选择！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"性别"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="meta">@Digits</span>(integer = <span class="number">18</span>, fraction = <span class="number">28</span>, message = <span class="string">"年龄必须在18-28之间！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"年龄"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@Past</span>(message = <span class="string">"生日必须在过去的时间里！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"生日"</span>)</span><br><span class="line">    <span class="meta">@DateTimeFormat</span>(pattern = <span class="string">"yyyy-MM-dd"</span>)</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"籍贯"</span>)</span><br><span class="line">    <span class="keyword">private</span> String nativePlace;</span><br><span class="line">    <span class="meta">@Pattern</span>(regexp = <span class="string">"^0\\d&#123;2,3&#125;-\\d&#123;7,8&#125;$"</span>, message = <span class="string">"固定电话格式不正确！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"固定电话"</span>)</span><br><span class="line">    <span class="keyword">private</span> String telephone;</span><br><span class="line">    <span class="meta">@Pattern</span>(regexp = <span class="string">"^1\\d&#123;10&#125;$"</span>, message = <span class="string">"移动电话格式不正确！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"移动电话"</span>)</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="meta">@Email</span>(message = <span class="string">"邮箱格式不正确！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"邮箱"</span>)</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"UserInfo&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", nickname='"</span> + nickname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", sex='"</span> + sex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">", birthday="</span> + birthday +</span><br><span class="line">                <span class="string">", nativePlace='"</span> + nativePlace + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", telephone='"</span> + telephone + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", phone='"</span> + phone + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", email='"</span> + email + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-controller中对其校验绑定进行使用"><a href="#2-controller中对其校验绑定进行使用" class="headerlink" title="2.controller中对其校验绑定进行使用"></a>2.controller中对其校验绑定进行使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.FieldError;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> qgs.csmp.zzz.UserInfo;</span><br><span class="line"><span class="keyword">import</span> qgs.framework.core.annotation.AuthPassport;</span><br><span class="line"><span class="keyword">import</span> qgs.framework.core.common.BaseController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Api</span>(tags = <span class="string">"validation校验demo"</span>)</span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/validation"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> <span class="keyword">extends</span> <span class="title">BaseController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AuthPassport</span>(value = <span class="keyword">false</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">(@Validated UserInfo userInfo, BindingResult bindingResult)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (bindingResult.hasErrors()) &#123;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span> (FieldError fieldError : bindingResult.getFieldErrors()) &#123;</span><br><span class="line">                sb.append(fieldError.getDefaultMessage()).append(<span class="string">",\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sb.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>注：<blockquote><p>1、@Validated作用就是将pojo内的注解数据校验规则(@NotNull等)生效，如果没有该注解的声明，pojo内有注解数据校验规则也不会生效<br>2、BindingResult对象用来获取校验失败的信息(@NotNull中的message)，与@Validated注解必须配对使用，一前一后  </p></blockquote></li></ul><h2 id="对BindingResult统一异常拦截"><a href="#对BindingResult统一异常拦截" class="headerlink" title="对BindingResult统一异常拦截"></a>对BindingResult统一异常拦截</h2><p>　　统一异常拦截后，不必每次都对controller接口增加参数BindingResult。代码实现如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.MethodArgumentNotValidException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> qgs.framework.util.utilty.StringUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintViolation;</span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintViolationException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionLogInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"rawtypes"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(Exception.class)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resolveException</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception e)</span> </span>&#123;</span><br><span class="line">        Logger logger = LoggerFactory.getLogger(getClass());</span><br><span class="line"></span><br><span class="line">        StringBuilder errorMsg = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        StringBuilder errorLog = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> BindingResult || e <span class="keyword">instanceof</span> MethodArgumentNotValidException ||</span><br><span class="line">                e <span class="keyword">instanceof</span> ConstraintViolationException) &#123;</span><br><span class="line">            BindingResult bindingResult = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">instanceof</span> BindingResult) &#123;</span><br><span class="line">                bindingResult = (BindingResult) e;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//实体类中包含其他实体</span></span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">instanceof</span> MethodArgumentNotValidException) &#123;</span><br><span class="line">                MethodArgumentNotValidException validException = (MethodArgumentNotValidException) e;</span><br><span class="line">                bindingResult = validException.getBindingResult();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (bindingResult != <span class="keyword">null</span> &amp;&amp; bindingResult.getAllErrors() != <span class="keyword">null</span> &amp;&amp; !bindingResult.getAllErrors().isEmpty()) &#123;</span><br><span class="line">                errorMsg = <span class="keyword">new</span> StringBuilder(bindingResult.getAllErrors().get(<span class="number">0</span>).getDefaultMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">instanceof</span> ConstraintViolationException) &#123;</span><br><span class="line">                Set&lt;ConstraintViolation&lt;?&gt;&gt; violations = ((ConstraintViolationException) e).getConstraintViolations();</span><br><span class="line">                <span class="keyword">for</span> (ConstraintViolation&lt;?&gt; violation : violations) &#123;</span><br><span class="line">                    errorMsg.append(violation.getMessage()).append(<span class="string">", "</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            errorMsg.append(StringUtil.isNullOrEmpty(e.getMessage()) ? e.toString() : e.getMessage());</span><br><span class="line">            errorLog.append(StringUtil.isNullOrEmpty(e.getMessage()) ? e.toString() : e.getMessage());</span><br><span class="line">            errorLog.append(<span class="string">"\r\n"</span>);</span><br><span class="line">            <span class="keyword">for</span> (StackTraceElement traceElement : e.getStackTrace()) &#123;</span><br><span class="line">                errorLog.append(traceElement.toString());</span><br><span class="line">                errorLog.append(<span class="string">"\r\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        logger.error(errorLog.toString());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            response.setStatus(<span class="number">500</span>);</span><br><span class="line">            response.setContentType(<span class="string">"application/json; charset=utf-8"</span>);</span><br><span class="line">            PrintWriter out = response.getWriter();</span><br><span class="line">            out.append(<span class="string">"&#123;\"msg\":\""</span>).append(errorMsg.toString()).append(<span class="string">"\"&#125;"</span>);</span><br><span class="line">            out.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ignored) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>注：<blockquote><p>这里只对一处不符合规则的错误信息输出</p></blockquote></li></ul><p>此时，controller代码可更改为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> <span class="keyword">extends</span> <span class="title">BaseController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@AuthPassport</span>(value = <span class="keyword">false</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">(@Validated UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> <span class="keyword">extends</span> <span class="title">BaseController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@AuthPassport</span>(value = <span class="keyword">false</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">(@Valid UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>@Validated或者@Valid均可</p><h2 id="分组校验"><a href="#分组校验" class="headerlink" title="分组校验"></a>分组校验</h2><h3 id="1-什么是分组校验？"><a href="#1-什么是分组校验？" class="headerlink" title="1.什么是分组校验？"></a>1.什么是分组校验？</h3><p>　　校验规则是在pojo制定的，而同一个pojo可以被多个Controller使用，此时会有问题，即：不同的Controller方法对同一个pojo进行校验，此时<br>这些校验信息是共享在这不同的Controller方法中，但是实际上每个Controller方法可能需要不同的校验，在这种情况下，就需要使用分组校验来<br>解决这种问题，通俗的讲，一个pojo中有很多属性，controller中的方法1可能只需要校验pojo中的属性1，controller中的方法2只需要校验pojo中<br>的属性2，但是pojo中的校验注解有很多，怎样才能使方法1只校验属性1，方法二只校验属性2呢？就需要用分组校验来解决了。</p><h3 id="2-定义分组"><a href="#2-定义分组" class="headerlink" title="2.定义分组"></a>2.定义分组</h3><p>　　1.定义空的接口<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ValidationGroup1</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ValidationGroup2</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　2.修改pojo，注解增加参数groups<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"姓名"</span>)</span><br><span class="line">    <span class="meta">@NotEmpty</span>(message = <span class="string">"姓名不能为空！"</span>, groups = ValidationGroup1.class)</span><br><span class="line">    <span class="meta">@Max</span>(value = <span class="number">5</span>, message = <span class="string">"姓名长度不能超过5！"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Length</span>(max = <span class="number">10</span>, message = <span class="string">"昵称长度不能超过10！"</span>, groups = ValidationGroup2.class)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"昵称"</span>)</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="meta">@Pattern</span>(regexp = <span class="string">"[男|女]"</span>, message = <span class="string">"性别只能在男或女中选择！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"性别"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="meta">@Digits</span>(integer = <span class="number">18</span>, fraction = <span class="number">28</span>, message = <span class="string">"年龄必须在18-28之间！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"年龄"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@Past</span>(message = <span class="string">"生日必须在过去的时间里！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"生日"</span>)</span><br><span class="line">    <span class="meta">@DateTimeFormat</span>(pattern = <span class="string">"yyyy-MM-dd"</span>)</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"籍贯"</span>)</span><br><span class="line">    <span class="keyword">private</span> String nativePlace;</span><br><span class="line">    <span class="meta">@Pattern</span>(regexp = <span class="string">"^0\\d&#123;2,3&#125;-\\d&#123;7,8&#125;$"</span>, message = <span class="string">"固定电话格式不正确！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"固定电话"</span>)</span><br><span class="line">    <span class="keyword">private</span> String telephone;</span><br><span class="line">    <span class="meta">@Pattern</span>(regexp = <span class="string">"^1\\d&#123;10&#125;$"</span>, message = <span class="string">"移动电话格式不正确！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"移动电话"</span>)</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="meta">@Email</span>(message = <span class="string">"邮箱格式不正确！"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"邮箱"</span>)</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"UserInfo&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", nickname='"</span> + nickname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", sex='"</span> + sex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">", birthday="</span> + birthday +</span><br><span class="line">                <span class="string">", nativePlace='"</span> + nativePlace + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", telephone='"</span> + telephone + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", phone='"</span> + phone + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", email='"</span> + email + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>　　2.修改controller<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> <span class="keyword">extends</span> <span class="title">BaseController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@AuthPassport</span>(value = <span class="keyword">false</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">(@Validated(value = &#123;ValidationGroup1.class&#125;)</span> UserInfo userInfo) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>注：<blockquote><p>此时只能使用@Validated注解<br>如上，只校验pojo中groups为ValidationGroup1的属性，如name有两处校验，只会校验是否为空而不会校验长度是否大于5</p></blockquote></li></ul><h2 id="自定义注解校验"><a href="#自定义注解校验" class="headerlink" title="自定义注解校验"></a>自定义注解校验</h2><p>　　业务需求总是比框架提供的这些简单校验要复杂的多，我们可以自定义校验来满足我们的需求。自定义Spring Validation非常简单，主要分为两步。<br>　　1.自定义校验注解<br>我们尝试添加一个“字符串不能包含空格”的限制。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.validation.Constraint;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Payload;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.annotation.ElementType.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.annotation.RetentionPolicy.RUNTIME;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(&#123;METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Constraint</span>(validatedBy = &#123;CannotHaveBlankValidator.class&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> CannotHaveBlank &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function">String <span class="title">message</span><span class="params">()</span> <span class="keyword">default</span> "不能包含空格"</span>;</span><br><span class="line">    </span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    Class&lt;? extends Payload&gt;[] payload() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//指定多个时使用</span></span><br><span class="line">    <span class="meta">@Target</span>(&#123;FIELD, METHOD, PARAMETER, ANNOTATION_TYPE&#125;)</span><br><span class="line">    <span class="meta">@Retention</span>(RUNTIME)</span><br><span class="line">    <span class="meta">@Documented</span></span><br><span class="line">    <span class="meta">@interface</span> List &#123;</span><br><span class="line">        CannotHaveBlank[] value();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>　　2 编写校验类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidator;</span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidatorContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CannotHaveBlankValidator</span> <span class="keyword">implements</span> <span class="title">ConstraintValidator</span>&lt;<span class="title">CannotHaveBlank</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(CannotHaveBlank constraintAnnotation)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(String value, ConstraintValidatorContext context)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//null时不进行校验</span></span><br><span class="line">        <span class="keyword">if</span> (value != <span class="keyword">null</span> &amp;&amp; value.contains(<span class="string">" "</span>)) &#123;</span><br><span class="line">            <span class="comment">//获取默认提示信息</span></span><br><span class="line">            String defaultConstraintMessageTemplate = context.getDefaultConstraintMessageTemplate();</span><br><span class="line">            System.out.println(<span class="string">"default message :"</span> + defaultConstraintMessageTemplate);</span><br><span class="line">            <span class="comment">//禁用默认提示信息</span></span><br><span class="line">            context.disableDefaultConstraintViolation();</span><br><span class="line">            <span class="comment">//设置提示语</span></span><br><span class="line">            context.buildConstraintViolationWithTemplate(<span class="string">"can not contains blank"</span>).addConstraintViolation();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>注:<blockquote><p>所有的验证者都需要实现ConstraintValidator接口，它的接口包含一个初始化事件方法，和一个判断是否合法的方法。<br>ConstraintValidatorContext 这个上下文包含了认证中所有的信息，我们可以利用这个上下文实现获取默认错误提示信息，禁用错误提示信息，<br>改写错误提示信息等操作。 </p></blockquote><div style="display:none;"><h2 id="基于方法校验-controller层方法中单个参数校验"><a href="#基于方法校验-controller层方法中单个参数校验" class="headerlink" title="基于方法校验(controller层方法中单个参数校验)"></a>基于方法校验(controller层方法中单个参数校验)</h2></div></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Api</span>(tags = <span class="string">"validation校验demo"</span>)</span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/validation"</span>)</span><br><span class="line"><span class="meta">@Validated</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> <span class="keyword">extends</span> <span class="title">BaseController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AuthPassport</span>(value = <span class="keyword">false</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">(@NotNull(message = <span class="string">"不能为空"</span>)</span> Integer id) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.为类添加@Validated注解<br>2.校验方法的返回值和入参<br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;　　数据的校验是交互式网站一个不可或缺的功能，前端的js校验可以涵盖大部分的校验职责，如用户名唯一性，生日格式，邮箱格式校验等等常用的&lt;br
      
    
    </summary>
    
      <category term="Java" scheme="http://www.bestliuhao.club/categories/Java/"/>
    
    
      <category term="Validation完成后端数据校验" scheme="http://www.bestliuhao.club/tags/Validation%E5%AE%8C%E6%88%90%E5%90%8E%E7%AB%AF%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>mysql分页列表使用LEFT JOIN时的优化方法</title>
    <link href="http://www.bestliuhao.club/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql%E5%88%86%E9%A1%B5%E5%88%97%E8%A1%A8%E4%BD%BF%E7%94%A8LEFT%20JOIN%E6%97%B6%E7%9A%84%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/"/>
    <id>http://www.bestliuhao.club/数据库/mysql分页列表使用LEFT JOIN时的优化方法/</id>
    <published>2019-01-21T02:13:44.887Z</published>
    <updated>2019-01-24T06:28:09.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql分页列表使用LEFT-JOIN时的优化方法"><a href="#mysql分页列表使用LEFT-JOIN时的优化方法" class="headerlink" title="mysql分页列表使用LEFT JOIN时的优化方法"></a>mysql分页列表使用LEFT JOIN时的优化方法</h1><h3 id="分页列表查询一般格式"><a href="#分页列表查询一般格式" class="headerlink" title="分页列表查询一般格式"></a>分页列表查询一般格式</h3><ul><li><p>取分页数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM table1 t1</span><br><span class="line">LEFT JOIN table2 t2 ON t2.id = t1.id</span><br><span class="line">LEFT JOIN table3 t3 ON t3.id = t1.id</span><br><span class="line">LEFT JOIN table4 t4 ON t4.id = t1.id</span><br><span class="line">WHERE t1.id = 1 AND t2. ...</span><br><span class="line">LIMIT 0,30</span><br></pre></td></tr></table></figure></li><li><p>取总数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(0)</span><br><span class="line">FROM table1 t1</span><br><span class="line">LEFT JOIN table2 t2 ON t2.id = t1.id</span><br><span class="line">LEFT JOIN table3 t3 ON t3.id = t1.id</span><br><span class="line">LEFT JOIN table4 t4 ON t4.id = t1.id</span><br><span class="line">WHERE t1.id = 1 AND t2. ...</span><br></pre></td></tr></table></figure></li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><blockquote><ul><li><code>LEFT JOIN</code>消耗性能</li><li>全部<code>LEFT JOIN</code>后再取分页</li><li>取总数时候不必要的<code>LEFT JOIN</code>影响性能</li></ul></blockquote><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><blockquote><ul><li><code>WHERE</code> 条件语句用不到的<code>LEFT JOIN</code>的表，放到取分页后面</li><li>取总数时候不必要的<code>LEFT JOIN</code>不要</li></ul></blockquote><ul><li><p>取分页数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM (</span><br><span class="line">    SELECT *</span><br><span class="line">    FROM table1 t1</span><br><span class="line">    LEFT JOIN table2 t2 ON t2.id = t1.id</span><br><span class="line">    LEFT JOIN table3 t3 ON t3.id = t1.id</span><br><span class="line">    WHERE t1.id = 1 AND t2. ...</span><br><span class="line">    LIMIT 0,30</span><br><span class="line">    )t</span><br><span class="line">LEFT JOIN table4 t4 ON t4.id = t1.id</span><br></pre></td></tr></table></figure></li><li><p>取总数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(0)</span><br><span class="line">FROM table1 t1</span><br><span class="line">LEFT JOIN table2 t2 ON t2.id = t1.id</span><br><span class="line">LEFT JOIN table2 t3 ON t3.id = t1.id</span><br><span class="line">WHERE t1.id = 1 AND t2. ...</span><br></pre></td></tr></table></figure></li></ul><h3 id="具体实际应用"><a href="#具体实际应用" class="headerlink" title="具体实际应用"></a>具体实际应用</h3><h4 id="网站分页列表"><a href="#网站分页列表" class="headerlink" title="网站分页列表"></a>网站分页列表</h4><h5 id="优化前"><a href="#优化前" class="headerlink" title="优化前"></a>优化前</h5><blockquote><ul><li>数据量：9741 </li><li>每页显示30条数据</li><li>平均每页刷新耗时：1100ms</li><li>列表数据<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">    w.*,</span><br><span class="line">    d.`name` AS deptName,</span><br><span class="line">    IFNULL(de.`name`,&apos;&apos;) AS superviseName,</span><br><span class="line">    CASE WHEN w.school_id IS NULL THEN d.`name` ELSE s.name END AS schoolName</span><br><span class="line">    FROM website w</span><br><span class="line">    LEFT JOIN sys_dept d ON d.id = w.dept_id</span><br><span class="line">    LEFT JOIN sys_dept de ON de.id = w.supervise_id</span><br><span class="line">    LEFT JOIN sys_dept scan ON scan.id = w.scan_id</span><br><span class="line">    LEFT JOIN sys_dept verify ON verify.id = w.verify_id</span><br><span class="line">    LEFT JOIN sys_dept_info i ON i.dept_id = w.dept_id</span><br><span class="line">    LEFT JOIN dictionary_item item ON i.area_id = item.id</span><br><span class="line">    LEFT JOIN school s ON s.id = w.school_id</span><br><span class="line">    WHERE w.is_del = 0</span><br><span class="line">    &lt;if test=&quot;deptId != null and deptId != &apos;&apos;&quot;&gt;</span><br><span class="line">        AND d.id = #&#123;deptId&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;name != null and name != &apos;&apos;&quot;&gt;</span><br><span class="line">        AND (UPPER(w.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;)))</span><br><span class="line">        OR UPPER(w.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;))))</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;url != null and url != &apos;&apos;&quot;&gt;</span><br><span class="line">        AND UPPER(w.url) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;url&#125;,&apos;%&apos;)))</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;linkman != null and linkman != &apos;&apos;&quot;&gt;</span><br><span class="line">        AND UPPER(w.contact_name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;linkman&#125;,&apos;%&apos;)))</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    ORDER BY w.create_date DESC</span><br><span class="line">    &lt;if test=&quot;pageSize != null &quot;&gt;</span><br><span class="line">        LIMIT #&#123;offset&#125;, #&#123;pageSize&#125;</span><br><span class="line">    &lt;/if&gt;</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>网站数量<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">    COUNT(0)</span><br><span class="line">    FROM website w</span><br><span class="line">    LEFT JOIN sys_dept d ON d.id = w.dept_id</span><br><span class="line">    LEFT JOIN sys_dept de ON de.id = w.supervise_id</span><br><span class="line">    LEFT JOIN sys_dept scan ON scan.id = w.scan_id</span><br><span class="line">    LEFT JOIN sys_dept verify ON verify.id = w.verify_id</span><br><span class="line">    LEFT JOIN sys_dept_info i ON i.dept_id = w.dept_id</span><br><span class="line">    LEFT JOIN dictionary_item item ON i.area_id = item.id</span><br><span class="line">    LEFT JOIN school s ON s.id = w.school_id</span><br><span class="line">    WHERE w.is_del = 0</span><br><span class="line">    &lt;if test=&quot;deptId != null and deptId != &apos;&apos;&quot;&gt;</span><br><span class="line">        AND d.id = #&#123;deptId&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;name != null and name != &apos;&apos;&quot;&gt;</span><br><span class="line">        AND (UPPER(w.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;)))</span><br><span class="line">        OR UPPER(w.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;))))</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;url != null and url != &apos;&apos;&quot;&gt;</span><br><span class="line">        AND UPPER(w.url) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;url&#125;,&apos;%&apos;)))</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;linkman != null and linkman != &apos;&apos;&quot;&gt;</span><br><span class="line">        AND UPPER(w.contact_name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;linkman&#125;,&apos;%&apos;)))</span><br><span class="line">    &lt;/if&gt;</span><br></pre></td></tr></table></figure></li></ul><h5 id="优化-1"><a href="#优化-1" class="headerlink" title="优化"></a>优化</h5><blockquote><ul><li>数据量：9741 </li><li>每页显示300条数据</li><li>平均每页刷新耗时：120ms</li></ul></blockquote><blockquote><ul><li>每页显示30条数据</li><li>平均每页刷新耗时：50ms</li><li>列表数据<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">    t.*,</span><br><span class="line">    item.name                 AS areaName,</span><br><span class="line">    IFNULL(scan.`name`, &apos;&apos;)   AS scanName,</span><br><span class="line">    IFNULL(verify.`name`, &apos;&apos;) AS verifyName,</span><br><span class="line">    de.`name`                 AS superviseName</span><br><span class="line">    FROM (</span><br><span class="line">        SELECT</span><br><span class="line">            w.id,</span><br><span class="line">            w.name,</span><br><span class="line">            w.url,</span><br><span class="line">            w.dept_id,</span><br><span class="line">            w.scan_id,</span><br><span class="line">            w.supervise_id,</span><br><span class="line">            w.verify_id,</span><br><span class="line">            CASE WHEN w.school_id IS NULL THEN d.`name` ELSE s.name END  AS schoolName,</span><br><span class="line">            d.`name`                                                     AS deptName</span><br><span class="line">        FROM website w</span><br><span class="line">        LEFT JOIN sys_dept d ON d.id = w.dept_id</span><br><span class="line">        LEFT JOIN school s ON s.id = w.school_id</span><br><span class="line">        WHERE w.is_del = 0</span><br><span class="line">        &lt;if test=&quot;deptId != null and deptId != &apos;&apos;&quot;&gt;</span><br><span class="line">            AND d.id = #&#123;deptId&#125;</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">        &lt;if test=&quot;deptName != null and deptName != &apos;&apos;&quot;&gt;</span><br><span class="line">            AND (UPPER(d.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;)))</span><br><span class="line">            OR UPPER(d.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;)))</span><br><span class="line">            OR UPPER(s.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;))))</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">        &lt;if test=&quot;name != null and name != &apos;&apos;&quot;&gt;</span><br><span class="line">            AND (UPPER(w.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;)))</span><br><span class="line">            OR UPPER(w.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;))))</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">        &lt;if test=&quot;url != null and url != &apos;&apos;&quot;&gt;</span><br><span class="line">            AND UPPER(w.url) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;url&#125;,&apos;%&apos;)))</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">        &lt;if test=&quot;linkman != null and linkman != &apos;&apos;&quot;&gt;</span><br><span class="line">            AND UPPER(w.contact_name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;linkman&#125;,&apos;%&apos;)))</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">        ORDER BY w.create_date DESC</span><br><span class="line">        &lt;if test=&quot;pageSize != null &quot;&gt;</span><br><span class="line">            LIMIT #&#123;offset&#125;, #&#123;pageSize&#125;</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">    ) t</span><br><span class="line">    LEFT JOIN sys_dept_info i ON i.dept_id = t.dept_id</span><br><span class="line">    LEFT JOIN dictionary_item item ON i.area_id = item.id</span><br><span class="line">    LEFT JOIN sys_dept de ON de.id = t.supervise_id</span><br><span class="line">    LEFT JOIN sys_dept scan ON scan.id = t.scan_id</span><br><span class="line">    LEFT JOIN sys_dept verify ON verify.id = t.verify_id</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>网站数量<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">    COUNT(0)</span><br><span class="line">    FROM (</span><br><span class="line">        SELECT</span><br><span class="line">            w.id,</span><br><span class="line">            w.name,</span><br><span class="line">            w.url,</span><br><span class="line">            w.dept_id,</span><br><span class="line">            w.scan_id,</span><br><span class="line">            w.supervise_id,</span><br><span class="line">            w.verify_id,</span><br><span class="line">            CASE WHEN w.school_id IS NULL THEN d.`name` ELSE s.name END  AS schoolName,</span><br><span class="line">            d.`name`                                                     AS deptName</span><br><span class="line">        FROM website w</span><br><span class="line">        LEFT JOIN sys_dept d ON d.id = w.dept_id</span><br><span class="line">        LEFT JOIN school s ON s.id = w.school_id</span><br><span class="line">        WHERE w.is_del = 0</span><br><span class="line">        &lt;if test=&quot;deptId != null and deptId != &apos;&apos;&quot;&gt;</span><br><span class="line">            AND d.id = #&#123;deptId&#125;</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">        &lt;if test=&quot;deptName != null and deptName != &apos;&apos;&quot;&gt;</span><br><span class="line">            AND (UPPER(d.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;)))</span><br><span class="line">            OR UPPER(d.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;)))</span><br><span class="line">            OR UPPER(s.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;))))</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">        &lt;if test=&quot;name != null and name != &apos;&apos;&quot;&gt;</span><br><span class="line">            AND (UPPER(w.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;)))</span><br><span class="line">            OR UPPER(w.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;))))</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">        &lt;if test=&quot;url != null and url != &apos;&apos;&quot;&gt;</span><br><span class="line">            AND UPPER(w.url) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;url&#125;,&apos;%&apos;)))</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">        &lt;if test=&quot;linkman != null and linkman != &apos;&apos;&quot;&gt;</span><br><span class="line">            AND UPPER(w.contact_name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;linkman&#125;,&apos;%&apos;)))</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">        ORDER BY w.create_date DESC</span><br><span class="line">        &lt;if test=&quot;pageSize != null &quot;&gt;</span><br><span class="line">            LIMIT #&#123;offset&#125;, #&#123;pageSize&#125;</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">    ) t</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mysql分页列表使用LEFT-JOIN时的优化方法&quot;&gt;&lt;a href=&quot;#mysql分页列表使用LEFT-JOIN时的优化方法&quot; class=&quot;headerlink&quot; title=&quot;mysql分页列表使用LEFT JOIN时的优化方法&quot;&gt;&lt;/a&gt;mysql分页列
      
    
    </summary>
    
      <category term="数据库" scheme="http://www.bestliuhao.club/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql分页列表优化" scheme="http://www.bestliuhao.club/tags/mysql%E5%88%86%E9%A1%B5%E5%88%97%E8%A1%A8%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.bestliuhao.club/uncategorized/hello-world/"/>
    <id>http://www.bestliuhao.club/uncategorized/hello-world/</id>
    <published>2019-01-18T02:45:19.128Z</published>
    <updated>2019-01-24T07:12:33.322Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
