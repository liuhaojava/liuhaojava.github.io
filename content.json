[{"title":"mysql分页列表使用LEFT JOIN时的优化方法","date":"2019-01-21T02:13:44.887Z","path":"2019/01/21/mysql分页列表使用LEFT JOIN时的优化方法/","text":"mysql分页列表使用LEFT JOIN时的优化方法分页列表查询一般格式 取分页数据 1234567SELECT *FROM table1 t1LEFT JOIN table2 t2 ON t2.id = t1.idLEFT JOIN table3 t3 ON t3.id = t1.idLEFT JOIN table4 t4 ON t4.id = t1.idWHERE t1.id = 1 AND t2. ...LIMIT 0,30 取总数 123456SELECT COUNT(0)FROM table1 t1LEFT JOIN table2 t2 ON t2.id = t1.idLEFT JOIN table3 t3 ON t3.id = t1.idLEFT JOIN table4 t4 ON t4.id = t1.idWHERE t1.id = 1 AND t2. ... 缺点 LEFT JOIN消耗性能 全部LEFT JOIN后再取分页 取总数时候不必要的LEFT JOIN影响性能 优化 WHERE 条件语句用不到的LEFT JOIN的表，放到取分页后面 取总数时候不必要的LEFT JOIN不要 取分页数据 12345678910SELECT *FROM ( SELECT * FROM table1 t1 LEFT JOIN table2 t2 ON t2.id = t1.id LEFT JOIN table3 t3 ON t3.id = t1.id WHERE t1.id = 1 AND t2. ... LIMIT 0,30 )tLEFT JOIN table4 t4 ON t4.id = t1.id 取总数 12345SELECT COUNT(0)FROM table1 t1LEFT JOIN table2 t2 ON t2.id = t1.idLEFT JOIN table2 t3 ON t3.id = t1.idWHERE t1.id = 1 AND t2. ... 具体实际应用网站分页列表优化前 数据量：9741 每页显示30条数据 平均每页刷新耗时：1100ms 列表数据12345678910111213141516171819202122232425262728293031SELECT w.*, d.`name` AS deptName, IFNULL(de.`name`,&apos;&apos;) AS superviseName, CASE WHEN w.school_id IS NULL THEN d.`name` ELSE s.name END AS schoolName FROM website w LEFT JOIN sys_dept d ON d.id = w.dept_id LEFT JOIN sys_dept de ON de.id = w.supervise_id LEFT JOIN sys_dept scan ON scan.id = w.scan_id LEFT JOIN sys_dept verify ON verify.id = w.verify_id LEFT JOIN sys_dept_info i ON i.dept_id = w.dept_id LEFT JOIN dictionary_item item ON i.area_id = item.id LEFT JOIN school s ON s.id = w.school_id WHERE w.is_del = 0 &lt;if test=&quot;deptId != null and deptId != &apos;&apos;&quot;&gt; AND d.id = #&#123;deptId&#125; &lt;/if&gt; &lt;if test=&quot;name != null and name != &apos;&apos;&quot;&gt; AND (UPPER(w.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;))) OR UPPER(w.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;)))) &lt;/if&gt; &lt;if test=&quot;url != null and url != &apos;&apos;&quot;&gt; AND UPPER(w.url) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;url&#125;,&apos;%&apos;))) &lt;/if&gt; &lt;if test=&quot;linkman != null and linkman != &apos;&apos;&quot;&gt; AND UPPER(w.contact_name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;linkman&#125;,&apos;%&apos;))) &lt;/if&gt; ORDER BY w.create_date DESC &lt;if test=&quot;pageSize != null &quot;&gt; LIMIT #&#123;offset&#125;, #&#123;pageSize&#125; &lt;/if&gt; 网站数量123456789101112131415161718192021222324SELECT COUNT(0) FROM website w LEFT JOIN sys_dept d ON d.id = w.dept_id LEFT JOIN sys_dept de ON de.id = w.supervise_id LEFT JOIN sys_dept scan ON scan.id = w.scan_id LEFT JOIN sys_dept verify ON verify.id = w.verify_id LEFT JOIN sys_dept_info i ON i.dept_id = w.dept_id LEFT JOIN dictionary_item item ON i.area_id = item.id LEFT JOIN school s ON s.id = w.school_id WHERE w.is_del = 0 &lt;if test=&quot;deptId != null and deptId != &apos;&apos;&quot;&gt; AND d.id = #&#123;deptId&#125; &lt;/if&gt; &lt;if test=&quot;name != null and name != &apos;&apos;&quot;&gt; AND (UPPER(w.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;))) OR UPPER(w.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;)))) &lt;/if&gt; &lt;if test=&quot;url != null and url != &apos;&apos;&quot;&gt; AND UPPER(w.url) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;url&#125;,&apos;%&apos;))) &lt;/if&gt; &lt;if test=&quot;linkman != null and linkman != &apos;&apos;&quot;&gt; AND UPPER(w.contact_name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;linkman&#125;,&apos;%&apos;))) &lt;/if&gt; 优化 数据量：9741 每页显示300条数据 平均每页刷新耗时：120ms 每页显示30条数据 平均每页刷新耗时：50ms 列表数据12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849SELECT t.*, item.name AS areaName, IFNULL(scan.`name`, &apos;&apos;) AS scanName, IFNULL(verify.`name`, &apos;&apos;) AS verifyName, de.`name` AS superviseName FROM ( SELECT w.id, w.name, w.url, w.dept_id, w.scan_id, w.supervise_id, w.verify_id, CASE WHEN w.school_id IS NULL THEN d.`name` ELSE s.name END AS schoolName, d.`name` AS deptName FROM website w LEFT JOIN sys_dept d ON d.id = w.dept_id LEFT JOIN school s ON s.id = w.school_id WHERE w.is_del = 0 &lt;if test=&quot;deptId != null and deptId != &apos;&apos;&quot;&gt; AND d.id = #&#123;deptId&#125; &lt;/if&gt; &lt;if test=&quot;deptName != null and deptName != &apos;&apos;&quot;&gt; AND (UPPER(d.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;))) OR UPPER(d.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;))) OR UPPER(s.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;)))) &lt;/if&gt; &lt;if test=&quot;name != null and name != &apos;&apos;&quot;&gt; AND (UPPER(w.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;))) OR UPPER(w.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;)))) &lt;/if&gt; &lt;if test=&quot;url != null and url != &apos;&apos;&quot;&gt; AND UPPER(w.url) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;url&#125;,&apos;%&apos;))) &lt;/if&gt; &lt;if test=&quot;linkman != null and linkman != &apos;&apos;&quot;&gt; AND UPPER(w.contact_name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;linkman&#125;,&apos;%&apos;))) &lt;/if&gt; ORDER BY w.create_date DESC &lt;if test=&quot;pageSize != null &quot;&gt; LIMIT #&#123;offset&#125;, #&#123;pageSize&#125; &lt;/if&gt; ) t LEFT JOIN sys_dept_info i ON i.dept_id = t.dept_id LEFT JOIN dictionary_item item ON i.area_id = item.id LEFT JOIN sys_dept de ON de.id = t.supervise_id LEFT JOIN sys_dept scan ON scan.id = t.scan_id LEFT JOIN sys_dept verify ON verify.id = t.verify_id 网站数量12345678910111213141516171819202122232425262728293031323334353637383940SELECT COUNT(0) FROM ( SELECT w.id, w.name, w.url, w.dept_id, w.scan_id, w.supervise_id, w.verify_id, CASE WHEN w.school_id IS NULL THEN d.`name` ELSE s.name END AS schoolName, d.`name` AS deptName FROM website w LEFT JOIN sys_dept d ON d.id = w.dept_id LEFT JOIN school s ON s.id = w.school_id WHERE w.is_del = 0 &lt;if test=&quot;deptId != null and deptId != &apos;&apos;&quot;&gt; AND d.id = #&#123;deptId&#125; &lt;/if&gt; &lt;if test=&quot;deptName != null and deptName != &apos;&apos;&quot;&gt; AND (UPPER(d.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;))) OR UPPER(d.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;))) OR UPPER(s.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;deptName&#125;,&apos;%&apos;)))) &lt;/if&gt; &lt;if test=&quot;name != null and name != &apos;&apos;&quot;&gt; AND (UPPER(w.name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;))) OR UPPER(w.py) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;name&#125;,&apos;%&apos;)))) &lt;/if&gt; &lt;if test=&quot;url != null and url != &apos;&apos;&quot;&gt; AND UPPER(w.url) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;url&#125;,&apos;%&apos;))) &lt;/if&gt; &lt;if test=&quot;linkman != null and linkman != &apos;&apos;&quot;&gt; AND UPPER(w.contact_name) LIKE UPPER(CONCAT(&apos;%&apos;,CONCAT(#&#123;linkman&#125;,&apos;%&apos;))) &lt;/if&gt; ORDER BY w.create_date DESC &lt;if test=&quot;pageSize != null &quot;&gt; LIMIT #&#123;offset&#125;, #&#123;pageSize&#125; &lt;/if&gt; ) t","tags":[]},{"title":"Hello World","date":"2019-01-18T02:45:19.128Z","path":"2019/01/18/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]